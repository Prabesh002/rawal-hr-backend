"""create_tools_schema_and_calendar_events_table

Revision ID: 3b35e08c8668
Revises: 14b7859756af
Create Date: 2025-05-17 17:41:39.233058

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3b35e08c8668'
down_revision: Union[str, None] = '14b7859756af'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA IF NOT EXISTS tools")
    op.create_table('calendar_events',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_start_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('event_end_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_all_day', sa.Boolean(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('notify_before_minutes', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('color_tag', sa.String(), nullable=True),
    sa.Column('recurring_pattern', sa.String(), nullable=True),
    sa.Column('created_by_tool', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='tools'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP SCHEMA IF EXISTS tools CASCADE")
    op.drop_table('calendar_events', schema='tools')
    # ### end Alembic commands ###
